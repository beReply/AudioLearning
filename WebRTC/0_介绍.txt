WebRTC处理过程
	组成大致可以分为4部分，即两个WebRTC终端，一个Signal(信令)服务器和一个STUN/TURN服务器。
		WebRTC终端:负责音视频采集、编解码、NAT穿越、音视频数据传输。
		Signal服务器，负责信令处理，如加入房间，离开房间，媒体协商消息的传递等。
		STUN/TURN服务器，负责获取WebRTC终端在公网的IP地址，以及NAT穿越失败后的数据中转。
	
	过程
		当一端(WebRTC终端)进入房间之前，它首先会检测自己的设备是否可用。如果可用，则进行音视频数据采集。
		采集到的数据一方面可以做预览，另一方面可以将其录制下来保存成文件，等到视频通话结束后，上传到服务器让用户看之前的内容。
		在获取音视频数据就绪后，
			WebRTC终端要发送"加入"信令到Signal服务器。
			Signal服务器收到该消息后会创建房间。
			另一端则可以进行加入房间操作。
			第二个终端成功加入房间后，第一个用户会收到"另一个用户已经加入成功的消息"
		此时，第一个终端将创建"媒体连接"对象，即RTCPeerConnection，
			并将采集到的音视频数据通过RTCPeerConnection对象进行编码，最终通过P2P传送给对端。
		在进行P2P穿越时很有可能失败。所以，当P2P穿越失败后，为了保证音视频数据任然可以互通，则需要通过TURN服务器进行音视频数据中转。
		之后，对端将接收到的音视频数据进行解码，最后将其展示，就完成了一端到另一端的单通。
		
	基本概念
		摄像头
		帧率：摄像头一秒钟采集图像的次数称为帧率。帧率越高，视频越流畅。
		分辨率；常见的分辨率有2k,1080P,720P,420P。
		宽高比：常见的有16:9或4:3
		麦克风：一秒内采样的次数称为采样率，每个采样用几个bit表示，称为采样位深或采样大小。
		轨(Track)：每条轨数据都是独立的，不会与其他轨相交，如mp4中的音频轨，视频轨，它们在MP4文件中是被分别存储的。
		流(Stream)：可以理解成容器。可以分为媒体流(MediaStream)和数据流(DataStream)。每个流中能存放0个或多个轨。
	
	
		